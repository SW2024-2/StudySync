<body id="learning-record-page">
  <h1>学習を記録する</h1>

  <% if @study_log.errors.any? %>
    <div class="error-messages">
      <h2>エラーが発生しました:</h2>
      <ul>
        <% @study_log.errors.full_messages.each do |msg| %>
          <li><%= msg %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <%= form_with model: @study_log, local: true do |f| %>
    <div>
      <%= f.label :subject, "科目" %>
      <%= f.text_field :subject %>
    </div>

    <!-- 学習時間記録方法の選択 -->
    <div>
      <%= f.label :study_time_method, "学習時間の記録方法" %><br>
      <%= f.radio_button :study_time_method, 'manual', checked: @study_log.study_time_method == 'manual' %> 手動入力
      <%= f.radio_button :study_time_method, 'stopwatch', checked: @study_log.study_time_method == 'stopwatch' %> ストップウォッチ
      <%= f.radio_button :study_time_method, 'timer', checked: @study_log.study_time_method == 'timer' %> タイマー
    </div>

    <!-- 手動入力のフィールド -->
    <div id="manual-input-fields" style="display: none;">
      <%= f.label :study_time, "学習時間(分)" %>
      <%= f.number_field :study_time %> <!-- 手動入力の時間 -->
    </div>

    <!-- タイマーとストップウォッチのUI -->
    <div id="stopwatch-timer-fields" style="display: none;">
      <div id="stopwatch" style="display: none;">
        <p>ストップウォッチ: <span id="stopwatch-time">0</span> 秒</p>
        <button type="button" id="start-stopwatch">スタート</button>
        <button type="button" id="stop-stopwatch" style="display: none;">停止</button>
        <button type="button" id="complete-stopwatch" style="display: none;">完了</button>
      </div>
      <div id="timer" style="display: none;">
        <p>タイマー: <input type="number" id="timer-set-time" placeholder="分を入力" min="1"> 分</p>
        <button type="button" id="start-timer">スタート</button>
        <button type="button" id="stop-timer" style="display: none;">停止</button>
      </div>
    </div>

    <%= f.hidden_field :stopwatch_time, value: @study_log.stopwatch_time %> <!-- ストップウォッチ時間 -->
    <%= f.hidden_field :timer_time, value: @study_log.timer_time %> <!-- タイマー時間 -->
    <%= f.hidden_field :study_time_display, value: @study_log.study_time_display %> <!-- 表示用の時間 -->


    <div>
      <%= f.label :note, "メモ" %>
      <%= f.text_area :note %>
    </div>

    <div>
      <%= f.submit "記録する" %>
    </div>
  <% end %>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script>
    $(document).ready(function() {
      // 学習時間記録方法変更時の処理
      $("input[name='study_log[study_time_method]']").change(function() {
        const method = $("input[name='study_log[study_time_method]']:checked").val();
        
        if (method === 'manual') {
          $("#manual-input-fields").show();
          $("#stopwatch-timer-fields").hide();
        } else if (method === 'stopwatch') {
          $("#manual-input-fields").hide();
          $("#stopwatch-timer-fields").show();
          $("#stopwatch").show();
          $("#timer").hide();
        } else if (method === 'timer') {
          $("#manual-input-fields").hide();
          $("#stopwatch-timer-fields").show();
          $("#stopwatch").hide();
          $("#timer").show();
        }
      });

      // ストップウォッチ機能
      let stopwatchTime = 0;
      let stopwatchInterval;
      
      $('#start-stopwatch').click(function() {
        stopwatchInterval = setInterval(function() {
          stopwatchTime++;
          let minutes = Math.floor(stopwatchTime / 60);
          let seconds = stopwatchTime % 60;  // 秒の部分
          $('#stopwatch-time').text(`${minutes}:${seconds.toString().padStart(2, '0')}`);  // 分:秒形式で表示
        }, 1000);
        $('#start-stopwatch').hide();
        $('#stop-stopwatch').show();
        $('#complete-stopwatch').show();
      });
      
      $('#stop-stopwatch').click(function() {
        clearInterval(stopwatchInterval);
        $('#start-stopwatch').show();
        $('#stop-stopwatch').hide();
        $('#complete-stopwatch').show();
      });
      
      $('#complete-stopwatch').click(function() {
        // ストップウォッチの時間を秒単位で取得
        let formattedTime = `${Math.floor(stopwatchTime / 60)}:${(stopwatchTime % 60).toString().padStart(2, '0')}`;  // 分:秒形式
    
        // 秒単位でhiddenフィールドに時間をセットする
        $("input[name='study_log[stopwatch_time]']").val(stopwatchTime); // 秒単位で設定
    
        // 手動入力フィールドに時間をセット
        $("input[name='study_log[study_time]']").val(stopwatchTime); // 秒単位で保存する
    
        // 表示用の時間を分:秒形式に設定
        $("input[name='study_log[study_time_display]']").val(formattedTime); // 分:秒形式で表示用
    
        $('#manual-input-fields').show();
        $('#stopwatch').hide();
      });

      // タイマー機能
      let timerTime = 0;
      let timerInterval;

      $('#start-timer').click(function() {
        timerTime = $('#timer-set-time').val() * 60; // 入力された時間を秒に変換
        if (timerTime <= 0) {
          alert("時間を設定してください！");
          return;
        }

        timerInterval = setInterval(function() {
          if (timerTime <= 0) {
            clearInterval(timerInterval);
            alert("タイマーが終了しました!");
          } else {
            timerTime--;
            const minutes = Math.floor(timerTime / 60);
            const seconds = timerTime % 60;
            $('#timer-time').text(minutes.toString().padStart(2, '0') + ":" + seconds.toString().padStart(2, '0'));
          }
        }, 1000);
        $('#start-timer').hide();
        $('#stop-timer').show();
      });

      $('#stop-timer').click(function() {
        clearInterval(timerInterval);
        $('#start-timer').show();
        $('#stop-timer').hide();

        let minutes = Math.floor(timerTime / 60);
        $("input[name='study_log[study_time]']").val(minutes);
        $("input[name='study_log[timer_time]']").val(timerTime); // 秒単位で保存
        $('#manual-input-fields').show();
        $('#timer').hide();
      });
    });
  </script>
</body>
