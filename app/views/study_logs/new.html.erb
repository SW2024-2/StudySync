<body id="learning-record-page">
  <h1>学習を記録する</h1>

  <!-- エラーメッセージ表示 -->
  <% if @study_log.errors.any? %>
    <div class="error-messages">
      <h2>エラーが発生しました:</h2>
      <ul>
        <% @study_log.errors.full_messages.each do |msg| %>
          <li><%= msg %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <%= form_with model: @study_log, local: true do |f| %>
    <!-- 科目入力 -->
    <div>
      <%= f.label :subject, "科目" %>
      <%= f.text_field :subject %>
    </div>

    <!-- 学習時間記録方法の選択 -->
    <div>
      <%= f.label :study_time_method, "学習時間の記録方法" %><br>
      <%= f.radio_button :study_time_method, 'manual', checked: @study_log.study_time_method == 'manual' %> 手動入力
      <%= f.radio_button :study_time_method, 'stopwatch', checked: @study_log.study_time_method == 'stopwatch' %> ストップウォッチ
      <%= f.radio_button :study_time_method, 'timer', checked: @study_log.study_time_method == 'timer' %> タイマー
    </div>

    <!-- 手動入力フィールド -->
    <div id="manual-input-fields" style="display: none;">
      <%= f.label :study_time, "学習時間" %>
      <!-- 時間と分を別々に入力 -->
      <div>
        <%= f.number_field :study_time_hours, min: 0, placeholder: "時間", style: "width: 50px;" %> 時間
        <%= f.number_field :study_time_minutes, min: 0, placeholder: "分", style: "width: 50px;" %> 分
        <button type="button" id="reset-manual-inputs">リセット</button>
      </div>
      <div id="manual-error-message" style="color: red; display: none;">
        学習時間は1分以上でなければ記録できません。
      </div>
    </div>

    <!-- ストップウォッチ機能 -->
    <div id="stopwatch" style="display: none;">
      <p>ストップウォッチ: 
        <span id="stopwatch-time">00:00:00</span>
      </p>
      <button type="button" id="start-stopwatch">スタート</button>
      <button type="button" id="stop-stopwatch" style="display: none;">停止</button>
      <button type="button" id="restart-stopwatch" style="display: none;">再スタート</button>
      <button type="button" id="complete-stopwatch" style="display: none;">完了</button>
      <button type="button" id="reset-stopwatch" style="display: none;">リセット</button>
    </div>

    <!-- タイマー機能 -->
    <div id="timer" style="display: none;">
      <p>タイマー設定: 
        <input type="number" id="timer-set-hours" placeholder="時間" style="width: 50px;" min="0"> 時間
        <input type="number" id="timer-set-minutes" placeholder="分" style="width: 50px;" min="0"> 分
        <button type="button" id="reset-timer-inputs">リセット</button>
      </p>
      <p>残り時間: <span id="timer-time">00:00:00</span></p>
      <button type="button" id="start-timer">スタート</button>
      <button type="button" id="stop-timer" style="display: none;">停止</button>
      <button type="button" id="restart-timer" style="display: none;">再スタート</button>
      <button type="button" id="complete-timer" style="display: none;">完了</button>
      <button type="button" id="reset-timer" style="display: none;">リセット</button>
    </div>

    <!-- Hiddenフィールド: ストップウォッチやタイマー時間 -->
    <%= f.hidden_field :stopwatch_time %>
    <%= f.hidden_field :timer_time %>
    <%= f.hidden_field :study_time %>
    <%= f.hidden_field :stopwatch_time %>  <!-- ストップウォッチ時間（秒） -->

    <!-- メモ入力 -->
    <div>
      <%= f.label :note, "メモ" %>
      <%= f.text_area :note %>
    </div>

    <!-- 送信ボタン -->
    <div>
      <%= f.submit "記録する" %>
    </div>
  <% end %>

  <!-- jQueryライブラリ -->
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script>
    $(document).ready(function() {
      let stopwatchTime = 0, timerTime = 0, stopwatchInterval, timerInterval;
      let initialTimerTime = 0;  // タイマーの初期設定時間を保存
      let actualTimerTime = 0;   // 実際の経過時間を保存

      // 学習時間記録方法の表示切り替え
      function toggleFields(method) {
        $("#manual-input-fields, #stopwatch, #timer, #stopwatch-timer-fields").hide();
        if (method === 'manual') {
          $("#manual-input-fields").show();
        } else if (method === 'stopwatch') {
          $("#stopwatch-timer-fields, #stopwatch").show();
        } else if (method === 'timer') {
          $("#stopwatch-timer-fields, #timer").show();
        }
      }

      $("input[name='study_log[study_time_method]']").change(function() {
        toggleFields($(this).val());
      });

      // ストップウォッチ機能
      $("#start-stopwatch").click(function() {
        stopwatchInterval = setInterval(function() {
          stopwatchTime++;
          const hours = Math.floor(stopwatchTime / 3600);
          const minutes = Math.floor((stopwatchTime % 3600) / 60);
          const seconds = stopwatchTime % 60;
          $("#stopwatch-time").text(`${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`);
        }, 1000);
        $(this).hide();
        $("#stop-stopwatch").show();
      });

      $("#stop-stopwatch").click(function() {
        clearInterval(stopwatchInterval);
        $(this).hide();
        $("#restart-stopwatch, #complete-stopwatch, #reset-stopwatch").show();
      });

      $("#restart-stopwatch").click(function() {
        clearInterval(stopwatchInterval);
        stopwatchInterval = setInterval(function() {
          stopwatchTime++;
          const hours = Math.floor(stopwatchTime / 3600);
          const minutes = Math.floor((stopwatchTime % 3600) / 60);
          const seconds = stopwatchTime % 60;
          $("#stopwatch-time").text(`${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`);
        }, 1000);
        $(this).hide();
        $("#stop-stopwatch").show();
        $("#complete-stopwatch").hide();
      });

      $("#reset-stopwatch").click(function() {
        clearInterval(stopwatchInterval);
        stopwatchTime = 0;
        $("#stopwatch-time").text("00:00:00");
        $("#restart-stopwatch, #complete-stopwatch, #reset-stopwatch").hide();
        $("#start-stopwatch").show();
      });

      // 完了ボタンをクリックしたときに学習時間を記録
      $("#complete-stopwatch").click(function() {
        // 時間を切り捨て（秒数を切り捨て）
        const totalMinutes = Math.floor(stopwatchTime / 60);
        
        // 1分以上の場合のみ記録
        if (totalMinutes >= 1) {
          // 時間と分をフォームに入力（学習時間フィールドに記録）
          $("input[name='study_log[study_time]']").val(totalMinutes);  // 学習時間（分）をセット
          $("input[name='study_log[stopwatch_time]']").val(stopwatchTime);  // ストップウォッチの秒数も保存（オプション）
      
          // 他の必要な処理（例：フォーム送信等）を追加
          alert(`学習時間として${totalMinutes}分が記録されました`);
        } else {
          alert("学習時間は1分以上でなければ記録できません。");
        }
      });

      // タイマー機能
      $("#start-timer").click(function() {
        const inputHours = parseInt($("#timer-set-hours").val()) || 0;
        const inputMinutes = parseInt($("#timer-set-minutes").val()) || 0;
        initialTimerTime = inputHours * 3600 + inputMinutes * 60;  // 初期タイマー時間を保存
        timerTime = initialTimerTime;

        if (timerTime <= 0) {
          alert("有効な時間を入力してください！");
          return;
        }

        actualTimerTime = 0; // タイマーがスタートする前に経過時間をリセット

        timerInterval = setInterval(function() {
          if (timerTime <= 0) {
            clearInterval(timerInterval);
            alert("タイマーが終了しました！");
          } else {
            timerTime--;
            const hours = Math.floor(timerTime / 3600);
            const minutes = Math.floor((timerTime % 3600) / 60);
            const seconds = timerTime % 60;
            $("#timer-time").text(`${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`);
          }
        }, 1000);

        $(this).hide();
        $("#stop-timer").show();
      });

      $("#stop-timer").click(function() {
        clearInterval(timerInterval);
        $(this).hide();
        $("#restart-timer, #complete-timer, #reset-timer").show();
      });

      $("#restart-timer").click(function() {
        clearInterval(timerInterval);
        timerTime = initialTimerTime;  // 初期設定時間にリセット
        timerInterval = setInterval(function() {
          if (timerTime <= 0) {
            clearInterval(timerInterval);
            alert("タイマーが終了しました！");
          } else {
            timerTime--;
            const hours = Math.floor(timerTime / 3600);
            const minutes = Math.floor((timerTime % 3600) / 60);
            const seconds = timerTime % 60;
            $("#timer-time").text(`${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`);
          }
        }, 1000);

        $(this).hide();
        $("#stop-timer").show();
        $("#complete-timer").hide();
      });

      $("#reset-timer").click(function() {
        clearInterval(timerInterval);
        timerTime = 0;
        $("#timer-time").text("00:00:00");
        $("#restart-timer, #complete-timer, #reset-timer").hide();
        $("#start-timer").show();
      });

      $("#complete-timer").click(function() {
        const totalMinutes = Math.floor(actualTimerTime / 60);
        if (totalMinutes >= 1) {
          // 時間と分をフォームに入力
          $("input[name='study_log[study_time]']").val(totalMinutes);  // 学習時間（分）をセット
          $("input[name='study_log[timer_time]']").val(timerTime);  // タイマー経過時間（秒）も保存

          alert(`${totalMinutes}分の学習時間が記録されました`);
        } else {
          alert("学習時間は1分以上でなければ記録できません。");
        }
      });

      $("#reset-manual-inputs").click(function() {
        $("input[name='study_log[study_time_hours]']").val('');
        $("input[name='study_log[study_time_minutes]']").val('');
        $("#manual-error-message").hide();
      });

      $("#reset-timer-inputs").click(function() {
        $("#timer-set-hours").val('');
        $("#timer-set-minutes").val('');
      });

    $("#manual-input-fields").on("input", function() {
      const hours = parseInt($("input[name='study_log[study_time_hours]']").val()) || 0;
      const minutes = parseInt($("input[name='study_log[study_time_minutes]']").val()) || 0;

      // 学習時間が1分未満の場合はエラーメッセージを表示
      if ((hours === 0 && minutes < 1) || (hours === 0 && minutes === 0)) {
        $("#manual-error-message").show();
        $("#save-study-log").prop('disabled', true);  // 保存ボタンを無効化
      } else {
        $("#manual-error-message").hide();
        $("#save-study-log").prop('disabled', false);  // 保存ボタンを有効化
      }
    });

    // 手動入力が正しい場合のみ学習時間を記録
    $("#save-study-log").click(function() {
      const hours = parseInt($("input[name='study_log[study_time_hours]']").val()) || 0;
      const minutes = parseInt($("input[name='study_log[study_time_minutes]']").val()) || 0;

      if ((hours === 0 && minutes < 1) || (hours === 0 && minutes === 0)) {
        alert("学習時間は1分以上でなければ記録できません。");
      } else {
        // 正常に記録
        $("input[name='study_log[study_time]']").val(hours * 60 + minutes);
        alert("学習時間が記録されました");
      }
    });
  });
  </script>
</body>
